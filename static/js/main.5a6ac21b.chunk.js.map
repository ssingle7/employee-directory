{"version":3,"sources":["components/Header/Header.jsx","components/Search/index.jsx","components/EmployeeTable/index.jsx","utils/API.js","components/container/EmployeesContainer.jsx","App.js","index.js"],"names":["Header","className","SearchBar","props","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","EmployeeTable","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","axios","get","EmployeesContainer","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","data","results","catch","err","console","log","Search","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a6ac21b.chunk.js","sourcesContent":["import React from \"react\"; \r\nimport \"./style.css\"; \r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1 className=\"text-center\">Employee Directory</h1>\r\n            <p className=\"text-center\">\r\n                Click on column headers to filter by heading or use the search box to narrow\r\n                your results. \r\n            </p>\r\n            </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  // Setting the component's initial state\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light justify-content-center\">\r\n      <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\r\n        <input\r\n          className=\"form-control\"\r\n          value={props.value}\r\n          name=\"search\"\r\n          onChange={props.handleInputChange}\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </form>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\"; \r\n// import \"./style.css\"; \r\n\r\nconst EmployeeTable = (props) => {\r\n    return (\r\n        <table className=\"table table-striped table-sortable text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Image</th>\r\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\r\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\r\n              Name\r\n            </span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"email\")}>Email</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.state.filteredEmployees.map((employee) => {\r\n          const { first, last } = employee.name;\r\n          const fullName = `${first} ${last}`;\r\n\r\n          // Format date\r\n          const dob = props.formatDate(employee.dob.date);\r\n\r\n          return (\r\n            <tr key={employee.login.uuid}>\r\n              <td>\r\n                <img src={employee.picture.thumbnail} alt={fullName} />\r\n              </td>\r\n              <td className=\"align-middle\">{fullName}</td>\r\n              <td className=\"align-middle\">\r\n              <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\r\n              <td className=\"align-middle email\">\r\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\r\n              </td>\r\n              <td className=\"align-middle\">{dob}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default EmployeeTable;\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nconst URL = \"https://randomuser.me/api/?results=50&nat=us\"\r\n\r\nexport default {\r\n    getEmployees: function() {\r\n        return axios.get(URL);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport SearchBar from \"../Search\";\r\nimport EmployeeTable from \"../EmployeeTable\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass EmployeesContainer extends Component {\r\n  state = {\r\n    search: \"\",\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    sortDirections: this.initialSortDirections,\r\n  };\r\n\r\n  get initialSortDirections() {\r\n    return {\r\n      name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      dob: \"\",\r\n    };\r\n  }\r\n\r\n  // When this component mounts, load random users as employees from https://randomuser.me/\r\n  componentDidMount() {\r\n    API.getEmployees()\r\n      .then((res) =>\r\n        this.setState({\r\n          employees: res.data.results,\r\n          filteredEmployees: res.data.results,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  // Update search state to filter by employee name\r\n  handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ search: value });\r\n    this.filterEmployees(value.toLowerCase().trim());\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // Sort with the key of specified object.\r\n  // If key has children, sort by primary child and optionally a secondary child. i.e. sort by last name, then first.\r\n  sortBy = (key, primary = 0, secondary = 0) => {\r\n    let sortedEmployees = this.state.filteredEmployees;\r\n    if (this.state.sortDirections[key]) {\r\n      this.setState({\r\n        filteredEmployees: sortedEmployees.reverse(),\r\n        sortDirections: {\r\n          ...this.initialSortDirections,\r\n          [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\r\n        },\r\n      });\r\n    } else {\r\n      sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\r\n        a = a[key];\r\n        b = b[key];\r\n\r\n        // If secondary comparison given and primary comparison is equal\r\n        // Example: Sorting by last name, if last names are equal, then sort that instance by first name instead.\r\n        if (primary) {\r\n          if (secondary && a[primary] === b[primary]) {\r\n            return a[secondary].localeCompare(b[secondary]);\r\n          }\r\n          return a[primary].localeCompare(b[primary]);\r\n        } else {\r\n          return a.localeCompare(b);\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        filteredEmployees: sortedEmployees,\r\n        sortDirections: {\r\n          ...this.initialSortDirections,\r\n          [key]: \"asc\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  filterEmployees = (input) => {\r\n    if (input) {\r\n      this.setState({\r\n        filteredEmployees: this.state.employees.filter((employee) => {\r\n          return (\r\n            employee.name.first\r\n              .toLowerCase()\r\n              .concat(\" \", employee.name.last.toLowerCase())\r\n              .includes(input) ||\r\n            employee.phone.includes(input) ||\r\n            employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\r\n            employee.email.includes(input) ||\r\n            this.formatDate(employee.dob.date).includes(input)\r\n          );\r\n        }),\r\n      });\r\n    } else {\r\n      this.setState({ filteredEmployees: this.state.employees });\r\n    }\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    date = new Date(date);\r\n    let dob = [];\r\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\r\n    dob.push((\"0\" + date.getDate()).slice(-2));\r\n    dob.push(date.getFullYear());\r\n\r\n    // Join formatted date\r\n    return dob.join(\"-\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchBar\r\n          value={this.state.search}\r\n          handleInputChange={this.handleInputChange}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n        />\r\n        <div className=\"container mt-4\">\r\n          <EmployeeTable\r\n            state={this.state}\r\n            sortBy={this.sortBy}\r\n            filterEmployees={this.filterEmployees}\r\n            formatDate={this.formatDate}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeesContainer;\r\n","import React from \"react\"; \n// import \"./App.css\"; \nimport Header from \"./components/Header/Header\"; \nimport EmployeesContainer from \"./components/container/EmployeesContainer\";\n\nconst App = () => {\n  return (\n    <>\n    <Header />\n      <EmployeesContainer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}